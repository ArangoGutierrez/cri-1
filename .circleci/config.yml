version: 2

defaults: &defaults
  working_directory: /go/src/github.com/sylabs/cri
  docker:
    - image: ashael/singularity:3.0

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: singularity 3.0 build config
          command: |
            cp -r /go/src/github.com/singularityware/singularity/builddir ./vendor/github.com/singularityware/singularity/builddir
            cp /go/src/github.com/singularityware/singularity/src/pkg/buildcfg/config.go ./vendor/github.com/singularityware/singularity/src/pkg/buildcfg/config.go
      - run:
          name: Build Source
          command: go build ./...
      - run:
          name: Check Formatting
          command: test -z $(go fmt ./...)
      - run:
          name: Vet Source`
          command: go vet -all ./...
      - run:
          name: Check for Lint
          command: |
            curl -L https://git.io/vp6lP | sh && mv ./bin/* /bin/ 
            make lint
      - run:
          name: Run Tests
          command: make test

  get_source:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: dep-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
      - run:
          name: Set Up Vendor Directory
          command: |
            if [ ! -d vendor ]; then
              curl -s https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure -vendor-only
            fi
            # singularity build vars
            cp -r /go/src/github.com/singularityware/singularity/builddir ./vendor/github.com/singularityware/singularity/builddir
            cp /go/src/github.com/singularityware/singularity/src/pkg/buildcfg/config.go ./vendor/github.com/singularityware/singularity/src/pkg/buildcfg/config.go

      - save_cache:
          key: dep-cache-{{ checksum "Gopkg.lock" }}
          paths:
            - vendor
      - persist_to_workspace:
          root: /go
          paths:
            - src/github.com/sylabs/cri/*

  build_source:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Build Source
          command: make build

  check_formatting:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Check Formatting
          command: test -z $(go fmt ./...)

  vet_source:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Vet Source
          command: go vet -all ./...

  lint_source:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Check for Lint
          command: |
            curl -L https://git.io/vp6lP | sh && mv ./bin/* /bin/ 
            make lint

  unit_test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: /go
      - run:
          name: Run Tests
          command: make test

workflows:
  version: 2

  build_and_test:
    jobs:
      - get_source
      - build_source:
          requires:
            - get_source
      - check_formatting:
          requires:
            - get_source
      - vet_source:
          requires:
            - get_source
      - lint_source:
          requires:
            - get_source
      - unit_test:
          requires:
            - get_source